{"name": "test_register[case0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'access': 'e...fCGIO_6fl_cY'} == {'access': 'Z...bGciZu85ABiE'}\n  Differing items:\n  {'access': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjY0OTQyODQzLCJpYXQiOjE2NjQ5N...Q2ODg4OWZjOTdmOWI1ZWFkNTQ5IiwidXNlcl9pZCI6MTMsInVzZXJuYW1lIjoiYWFhYWFhIn0.uK_sice_3Z3BorRwsCIbHNQ2BsiZwcpUZYf9W9y0Ljc'} != {'access': 'ZTBiMTk2IMiOze6UY'}\n  {'refresh': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY2NTAyODk0MywiaWF0IjoxNjY0...0MDdjYjc1ZGQ0YzQ2NjFjMjk5YiIsInVzZXJfaWQiOjEzLCJ1c2VybmFtZSI6ImFhYWFhYSJ9.qjDJPVSyAUYtZV5NLowfLyXPAJ7OTrEfCGIO_6fl_cY'} != {'refresh': 'eyJ0eXAiOiJKV1QiLCJhbGciZu85...\n  \n  ...Full output truncated (8 lines hidden), use '-vv' to show", "trace": "self = <pytest_api.testCases.test_registration.TestRegister object at 0x00000210E85E16A0>\ncase = {'check_db_sql': \"select * from tb_users where username='aaaaaa'\", 'expected': '{\"refresh\":\"eyJ0eXAiOiJKV1QiLCJhbGciZu85ABiE\", \"access\":\"ZTBiMTk2IMiOze6UY\"}', 'id': 1, 'method': 'post', ...}\ndatabase = <pytest_api.utils.db_mysql_handler.HandleDB object at 0x00000210E970C2B0>\n\n    @pytest.mark.parametrize(\"case\", cases)\n    def test_register(self, case, database):\n        logger.info(\"*********   Case_{}：{}   *********\".format(case[\"id\"], case[\"title\"]))\n        expected = eval(case[\"expected\"])\n    \n        # test steps, test data\n        # replace some dynamic values before send request.\n        # replace '#phone#' with 'get_new_phone_number'\n        if case[\"request_data\"].find(\"#phone#\") != -1:\n            pn = get_new_phone_number()\n            case = replace_mark_with_value(case, \"#phone#\", pn)\n    \n        # send request\n        response = send_requests(case[\"method\"], case[\"url\"], case[\"request_data\"])\n        # Assert - code == 0 msg == ok\n        logger.info(\"Expected result：{}\".format(case[\"expected\"]))\n    \n        try:\n            # self.assertEqual(response.json()[\"code\"], expected[\"code\"])\n            # self.assertEqual(response.json()[\"msg\"], expected[\"msg\"])\n>           assert response.json() == expected\nE           AssertionError: assert {'access': 'e...fCGIO_6fl_cY'} == {'access': 'Z...bGciZu85ABiE'}\nE             Differing items:\nE             {'access': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjY0OTQyODQzLCJpYXQiOjE2NjQ5N...Q2ODg4OWZjOTdmOWI1ZWFkNTQ5IiwidXNlcl9pZCI6MTMsInVzZXJuYW1lIjoiYWFhYWFhIn0.uK_sice_3Z3BorRwsCIbHNQ2BsiZwcpUZYf9W9y0Ljc'} != {'access': 'ZTBiMTk2IMiOze6UY'}\nE             {'refresh': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY2NTAyODk0MywiaWF0IjoxNjY0...0MDdjYjc1ZGQ0YzQ2NjFjMjk5YiIsInVzZXJfaWQiOjEzLCJ1c2VybmFtZSI6ImFhYWFhYSJ9.qjDJPVSyAUYtZV5NLowfLyXPAJ7OTrEfCGIO_6fl_cY'} != {'refresh': 'eyJ0eXAiOiJKV1QiLCJhbGciZu85...\nE             \nE             ...Full output truncated (8 lines hidden), use '-vv' to show\n\ntestCases\\test_registration.py:41: AssertionError"}, "parameters": [{"name": "case", "value": "{'id': 1, 'title': 'register pass, username, password, mobile phone', 'method': 'post', 'url': '/paymall_admin/authorizations/', 'request_data': '{\"username\": \"aaaaaa\", \"password\": \"qqqqqqqq\"}', 'expected': '{\"refresh\":\"eyJ0eXAiOiJKV1QiLCJhbGciZu85ABiE\", \"access\":\"ZTBiMTk2IMiOze6UY\"}', 'check_db_sql': \"select * from tb_users where username='aaaaaa'\"}"}], "start": 1664942541932, "stop": 1664942542427, "uuid": "ce9d1698-265c-429e-b330-9e6c3d01ae50", "historyId": "3721f795faf0ec0951a95290c2bca7d5", "testCaseId": "bdda1c3547396fd1e333e79f45d10242", "fullName": "testCases.test_registration.TestRegister#test_register", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('class_init_envdata')"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_registration"}, {"name": "subSuite", "value": "TestRegister"}, {"name": "host", "value": "DESKTOP-E380NSU"}, {"name": "thread", "value": "20768-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_registration"}]}
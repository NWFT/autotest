import re

from api.utils.config_handler import conf, EnvData
from api.utils.random_phone_number_generator import get_new_phone_number
from api.utils.random_string_generator import get_new_name, get_random_string

data = '{"username":"#username#","mobile":"#phone#","password":"#password#","email":"a@a.com"}'
"""
        if case["request_data"].find("#phone#") != -1:
            pn = get_new_phone_number()
            case = replace_mark_with_value(case, "#phone#", pn)
        if case["request_data"].find("#username#") != -1:
            case = replace_mark_with_value(case, "#username#", get_new_name())
        if case["request_data"].find("#password#") != -1:
            case = replace_mark_with_value(case, "#password#", get_random_string(8))

"""
setattr(EnvData, "username", get_new_name())
setattr(EnvData, "phone", get_new_phone_number())
setattr(EnvData, "password", get_random_string(8))

# res = re.findall("#(.*?)#", data)

# where are values from?
# 1. EnvData class
# 2. Config -conf.ini
# 3. Generated by function/methods
# if res:
#     for item in res:
#         try:
#             value = conf.get("data", item)
#         except:
#             value = getattr(EnvData, item)
#
#         print(value)
#         data = data.replace(f"#{item}#", value)
#
#     print(data)


def replace_with_regular(data):
    res = re.findall("#(.*?)#", data)

    if res:
        for item in res:
            try:
                value = conf.get("data", item)
            except:
                value = getattr(EnvData, item)

            print(value)
            data = data.replace(f"#{item}#", value)

    return data


print(replace_with_regular(data))

# str_example = "abcdefg1234567&-%@xyz345339393hello123"
# --single
# a = re.findall(".", str_example)
# a = re.findall("\d", str_example)
# a = re.findall("\D", str_example)
# a = re.findall("\w", str_example)
# a = re.findall("\W", str_example)
# a = re.findall("[abq]", str_example)
# a = re.findall("[A-Z]", str_example)
# a = re.findall("[a-zA-Z0-9]", str_example)

# - multi-char
# a = re.findall(".{3}", str_example)
# a = re.findall("\d{3}", str_example)
# a = re.findall("\d{3,5}", str_example)  # greedy 5->4->3 default
# a = re.findall("\d{3,5}?", str_example)  # NON-greedy 3->
# a = re.findall("\d{3,}", str_example)  # greedy 5->4->3 default

# a = re.findall("h*", str_example)
# a = re.findall("h+", str_example)
# a = re.findall("h?", str_example)
# a = re.findall("\d+", str_example)
# a = re.findall("\w+", str_example)
# a = re.findall("h.*", str_example)

# a = re.findall("(1[0-4])", str_example)
# a = re.findall("^[a-z]{5}", str_example)
# a = re.findall("^[a-z]+", str_example)
# a = re.findall("z(\d+)h", str_example)
# a = re.findall("z(.*?)h", str_example)


"""
"."  * + ?
"""




